var app=angular.module("myApp",["ngAnimate"]);app.controller("IndexController",["$scope","$http","$sce",function(t,n,e){function c(){t.leftMenuBtns=[],n.get("/menuBtns").then(function(n){for(var e=0;e<n.data.length;e++){t.leftMenuBtns.push(n.data[e]);var c=t.leftMenuBtns[e],a=c.action;c.action=new Function(a)}},function(n){401==n.status&&(t.leftMenuBtns=[{icon:"sign-in",title:"Log In",action:t.login}])})}function a(n,e){t.alert.message=n,t.alert.status=e,setTimeout(function(){t.alert.status="",t.alert.message="",t.$apply()},3e3)}function o(){var n=t.acct.password;return t.acct.upper=/[A-Z]+/.test(n),t.acct.lower=/[a-z]+/.test(n),t.acct.num=/[0-9]+/.test(n),t.acct.special=/[!@#$%^(){}[\]~\-_:]+/.test(n),t.acct.length=n.length>=8,t.acct.upper&&t.acct.lower&&t.acct.num&&t.acct.special&&t.acct.length}t.itworks="Hello World!",t.leftMenuBtns=[],t.newSong="kid-cudi-dat-new-new-dirty",t.curSong={id:"No Song Playing"},t.history=[],t.loggingIn=!1,t.alert={status:"",message:""},t.acct={role:"listener",username:"",password:""};var i=t.acct.password;t.acct.upper=/[A-Z]+/.test(i),t.acct.lower=/[a-z]+/.test(i),t.acct.num=/[0-9]+/.test(i),t.acct.special=/[!@#$%^(){}[\]~\-_]+/.test(i);var s;SC.initialize({client_id:"2f5df4628f89bc06dc6f88789d5eb0ae",redirect_uri:"http://treesradio.net/soundcloud/callback.html"}),t.searchSong=function(n){console.log("Searching for song:",n),SC.get("/tracks/"+n).then(function(n){t.curSong=n,console.log(t.curSong),t.history.push(n),t.$apply(),SC.stream("/tracks/"+n.id).then(function(t){s=t,s.play()})})},t.login=function(){console.log("logging in"),n.post("/login",t.acct).then(function(n){t.loggingIn=!1,n.data.success&&(a("Thank you for logging in","success"),c())})},t.registerAcct=function(){o()?(t.loggingIn=!1,n.post("/register",t.acct).then(function(t){console.log(t.data),a("Thank you for registering","success"),setTimeout(function(){},3e3),c()})):a("Password must contain: Uppercase letter,Lowercase letter,number,special character","danger")},t.$watch("acct.password",function(){o()}),c()}]),$(function(){function t(){$(".mainWrapper").height($(window).height()),$(".leftMenu").height($(".mainWrapper").height()),$(".rightSidebar").height($(".mainWrapper").height())}t(),$(window).resize(function(){t()})});
//# sourceMappingURL=data:application/json;base64,
